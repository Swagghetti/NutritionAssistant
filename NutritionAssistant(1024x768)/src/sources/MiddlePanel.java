/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sources;

import java.util.ArrayList;
import javax.swing.JLabel;

/**
 *
 * @author User
 */
public class MiddlePanel extends javax.swing.JFrame {
    public static int uppergap = -150;
    static ArrayList<FoodPanel> panelList = new ArrayList<>();
    public final int MAX_NUM_OF_PANELS = 10;
    /**
     * Creates new form MiddlePanel
     */
    public MiddlePanel() {
        initComponents();
    }
    
    private void deleteMarked(){
        for(int i = 0; i < panelList.size(); i++){
            if(panelList.get(i).isMarked()){
                panelList.get(i).setVisible(false);
                SystemClass.list.remove(panelList.get(i).getFood());
                panelList.set(i, null);
                panelList.remove(i);
                uppergap -= 150;
                addFoodLabel.setText("");
                for(int j = i; j < panelList.size(); j++){
                    panelList.get(j).setBounds(0, panelList.get(j).getY() - 150, 300, 150);
                }
                i--;
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        scroll = new javax.swing.JScrollPane();
        containPanel = new javax.swing.JPanel();
        topBarPanel = new javax.swing.JPanel();
        caption = new javax.swing.JLabel();
        backPanel = new javax.swing.JPanel();
        backIcon = new javax.swing.JLabel();
        topBarBGLabel = new javax.swing.JLabel();
        proteinTextField = new javax.swing.JTextField();
        carboTextField = new javax.swing.JTextField();
        fatTextField = new javax.swing.JTextField();
        saltTextField = new javax.swing.JTextField();
        caloriesTextField = new javax.swing.JTextField();
        fibreTextField = new javax.swing.JTextField();
        addFoodBt = new javax.swing.JButton();
        dispOutputsBt = new javax.swing.JButton();
        deleteBt = new javax.swing.JButton();
        saturatedTextField = new javax.swing.JTextField();
        foodWeightTextField = new javax.swing.JTextField();
        addFoodLabel = new javax.swing.JLabel();
        proErrorLbl = new javax.swing.JLabel();
        carbErrorLbl = new javax.swing.JLabel();
        fatErrorLbl = new javax.swing.JLabel();
        satFatErrorLbl = new javax.swing.JLabel();
        foodWeightErrorLbl = new javax.swing.JLabel();
        caloriesErrorLbl = new javax.swing.JLabel();
        fibreErrorLbl = new javax.swing.JLabel();
        saltErrorLbl = new javax.swing.JLabel();
        foodTitleTextField = new javax.swing.JTextField();
        bck = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 900));
        jPanel1.setLayout(null);

        scroll.setBackground(new java.awt.Color(51, 51, 51));
        scroll.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        containPanel.setBackground(new java.awt.Color(51, 51, 51));
        containPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        containPanel.setPreferredSize(new java.awt.Dimension(300, 1500));

        javax.swing.GroupLayout containPanelLayout = new javax.swing.GroupLayout(containPanel);
        containPanel.setLayout(containPanelLayout);
        containPanelLayout.setHorizontalGroup(
            containPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );
        containPanelLayout.setVerticalGroup(
            containPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1496, Short.MAX_VALUE)
        );

        scroll.setViewportView(containPanel);

        jPanel1.add(scroll);
        scroll.setBounds(725, 0, 300, 768);

        topBarPanel.setBackground(new java.awt.Color(72, 110, 145));
        topBarPanel.setLayout(null);

        caption.setFont(new java.awt.Font("Arial Narrow", 1, 68)); // NOI18N
        caption.setText("Add Nutrition Values");
        topBarPanel.add(caption);
        caption.setBounds(151, 10, 590, 114);

        backPanel.setOpaque(false);
        backPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backPanelMouseClicked(evt);
            }
        });

        backIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/arrow.png"))); // NOI18N

        javax.swing.GroupLayout backPanelLayout = new javax.swing.GroupLayout(backPanel);
        backPanel.setLayout(backPanelLayout);
        backPanelLayout.setHorizontalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        backPanelLayout.setVerticalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backPanelLayout.createSequentialGroup()
                .addGap(0, 1, Short.MAX_VALUE)
                .addComponent(backIcon))
        );

        topBarPanel.add(backPanel);
        backPanel.setBounds(41, 13, 110, 111);

        topBarBGLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/secondbg.png"))); // NOI18N
        topBarPanel.add(topBarBGLabel);
        topBarBGLabel.setBounds(-12, -4, 930, 150);

        jPanel1.add(topBarPanel);
        topBarPanel.setBounds(0, 0, 900, 135);

        proteinTextField.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        proteinTextField.setToolTipText("Protein in 100 grams");
        proteinTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0), "Protein (g)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        proteinTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proteinTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(proteinTextField);
        proteinTextField.setBounds(30, 170, 310, 60);

        carboTextField.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        carboTextField.setToolTipText("Carbohydrate in 100 grams");
        carboTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0), "Carbohydrate (g)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel1.add(carboTextField);
        carboTextField.setBounds(30, 260, 310, 60);

        fatTextField.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        fatTextField.setToolTipText("Fat in 100 grams");
        fatTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0), "Fat (g)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel1.add(fatTextField);
        fatTextField.setBounds(30, 350, 310, 60);

        saltTextField.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        saltTextField.setToolTipText("Not essential value");
        saltTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0), "Salt (g) (optional)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel1.add(saltTextField);
        saltTextField.setBounds(390, 440, 310, 60);

        caloriesTextField.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        caloriesTextField.setToolTipText("If not given, calculated automatically");
        caloriesTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0), "Calories (kcal) (optional)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel1.add(caloriesTextField);
        caloriesTextField.setBounds(390, 260, 310, 60);

        fibreTextField.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        fibreTextField.setToolTipText("Not essential value");
        fibreTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0), "Fibre (g) (optional)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel1.add(fibreTextField);
        fibreTextField.setBounds(390, 350, 310, 60);

        addFoodBt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        addFoodBt.setText("ADD FOOD");
        addFoodBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFoodBtActionPerformed(evt);
            }
        });
        jPanel1.add(addFoodBt);
        addFoodBt.setBounds(250, 650, 250, 40);

        dispOutputsBt.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        dispOutputsBt.setText("DISPLAY OUTPUTS");
        dispOutputsBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispOutputsBtActionPerformed(evt);
            }
        });
        jPanel1.add(dispOutputsBt);
        dispOutputsBt.setBounds(550, 610, 160, 50);

        deleteBt.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        deleteBt.setText("DELETE SELECTED");
        deleteBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtActionPerformed(evt);
            }
        });
        jPanel1.add(deleteBt);
        deleteBt.setBounds(30, 610, 160, 50);

        saturatedTextField.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        saturatedTextField.setToolTipText("Saturated fat in 100 grams");
        saturatedTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0), "Saturated Fat (g)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel1.add(saturatedTextField);
        saturatedTextField.setBounds(30, 440, 310, 60);

        foodWeightTextField.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        foodWeightTextField.setToolTipText("Food weight in grams");
        foodWeightTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0), "Food Weight (g)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel1.add(foodWeightTextField);
        foodWeightTextField.setBounds(390, 170, 310, 60);

        addFoodLabel.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        addFoodLabel.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(addFoodLabel);
        addFoodLabel.setBounds(280, 690, 200, 20);

        proErrorLbl.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        proErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(proErrorLbl);
        proErrorLbl.setBounds(30, 230, 310, 20);

        carbErrorLbl.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        carbErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(carbErrorLbl);
        carbErrorLbl.setBounds(30, 320, 310, 20);

        fatErrorLbl.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        fatErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(fatErrorLbl);
        fatErrorLbl.setBounds(30, 410, 310, 20);

        satFatErrorLbl.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        satFatErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(satFatErrorLbl);
        satFatErrorLbl.setBounds(30, 500, 310, 20);

        foodWeightErrorLbl.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        foodWeightErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(foodWeightErrorLbl);
        foodWeightErrorLbl.setBounds(390, 230, 310, 20);

        caloriesErrorLbl.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        caloriesErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(caloriesErrorLbl);
        caloriesErrorLbl.setBounds(390, 320, 310, 20);

        fibreErrorLbl.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        fibreErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(fibreErrorLbl);
        fibreErrorLbl.setBounds(390, 410, 310, 20);

        saltErrorLbl.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        saltErrorLbl.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(saltErrorLbl);
        saltErrorLbl.setBounds(390, 500, 310, 20);

        foodTitleTextField.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        foodTitleTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0), "Food Title (optional)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 11))); // NOI18N
        jPanel1.add(foodTitleTextField);
        foodTitleTextField.setBounds(210, 530, 310, 60);

        bck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/grdbck.png"))); // NOI18N
        jPanel1.add(bck);
        bck.setBounds(0, 0, 1200, 900);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backPanelMouseClicked
        new UserPanel().setVisible(true);
        this.setVisible(false);
        uppergap = -150;
        panelList.clear();
        SystemClass.list.clear();
    }//GEN-LAST:event_backPanelMouseClicked

    private void proteinTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proteinTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proteinTextFieldActionPerformed

    private void addFoodBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFoodBtActionPerformed
        if(panelList.size() < MAX_NUM_OF_PANELS){
            double pro = 0;
            double carb = 0;
            double fat = 0;
            double sfat = 0;
            double fibre = 0;
            double cal = 0;
            double salt = 0;
            double weight = 0;
            boolean calorieGiven = true;
            boolean hasError = false;
            String title;
            
            if(!foodWeightTextField.getText().equals("")){
                try{
                    weight = Double.parseDouble(foodWeightTextField.getText());
                    
                    if(weight < 10 || weight > 10000){
                        foodWeightErrorLbl.setText("Invalid value");
                        hasError = true;
                    }
                    else
                        foodWeightErrorLbl.setText("");
                }catch(NumberFormatException e1){
                    foodWeightErrorLbl.setText("Invalid format");
                    hasError = true;
                }
            }
            else{
                foodWeightErrorLbl.setText("This field must be filled");
                hasError = true;
            }
            
            if(!proteinTextField.getText().equals("")){
                try{
                    pro = Double.parseDouble(proteinTextField.getText());
                    
                    if(pro < 0 || pro > 100){
                        proErrorLbl.setText("Invalid value");
                        hasError = true;
                    }
                    else
                        proErrorLbl.setText("");
                }catch(NumberFormatException e1){
                    proErrorLbl.setText("Invalid format");
                    hasError = true;
                }
            }
            else{
                proErrorLbl.setText("This field must be filled");
                hasError = true;
            }
                
            
            if(!carboTextField.getText().equals("")){
                try{
                    carb = Double.parseDouble(carboTextField.getText());
                    
                    if(carb < 0 || carb > 100){
                        carbErrorLbl.setText("Invalid value");
                        hasError = true;
                    }
                    else
                        carbErrorLbl.setText("");
                }catch(NumberFormatException e1){
                    carbErrorLbl.setText("Invalid format");
                    hasError = true;
                }
            }
            else{
                carbErrorLbl.setText("This field must be filled");
                hasError = true;
            }
                
            
            if(!fatTextField.getText().equals("")){
                try{
                    fat = Double.parseDouble(fatTextField.getText());
                    
                    if(fat < 0 || fat > 100){
                        fatErrorLbl.setText("Invalid value");
                        hasError = true;
                    }
                    else
                        fatErrorLbl.setText("");
                }catch(NumberFormatException e1){
                    fatErrorLbl.setText("Invalid format");
                    hasError = true;
                }
            }
            else{
                fatErrorLbl.setText("This field must be filled");
                hasError = true;
            }
                
            
            if(!saturatedTextField.getText().equals("")){
                try{
                    sfat = Double.parseDouble(saturatedTextField.getText());
                    
                    if(sfat < 0 || sfat > 100 || sfat > fat){
                        satFatErrorLbl.setText("Invalid value");
                        hasError = true;
                    }
                    else
                        satFatErrorLbl.setText("");
                }catch(NumberFormatException e1){
                    satFatErrorLbl.setText("Invalid format");
                    hasError = true;
                }
            }
            else{
                satFatErrorLbl.setText("This field must be filled");
                hasError = true;
            }
   
            
            if(!caloriesTextField.getText().equals("")){
                try{
                    cal = Double.parseDouble(caloriesTextField.getText());
                    
                    if(cal < 0 || cal > 10000){
                        caloriesErrorLbl.setText("Invalid value");
                        hasError = true;
                    }
                    else
                        caloriesErrorLbl.setText("");
                }catch(NumberFormatException e1){
                    caloriesErrorLbl.setText("Invalid format");
                    hasError = true;
                }
            }
            else
                calorieGiven = false;
            
            if(!fibreTextField.getText().equals("")){
                try{
                    fibre = Double.parseDouble(fibreTextField.getText());
                    
                    if(fibre < 0 || fibre > 100){
                        fibreErrorLbl.setText("Invalid value");
                        hasError = true;
                    }
                    else
                        fibreErrorLbl.setText("");
                }catch(NumberFormatException e1){
                    fibreErrorLbl.setText("Invalid format");
                    hasError = true;
                }
            }
            else
                fibre = 0;
            if(!saltTextField.getText().equals("")){
                try{
                    salt = Double.parseDouble(saltTextField.getText());
                    
                    if(salt < 0 || salt > 100){
                        saltErrorLbl.setText("Invalid value");
                        hasError = true;
                    }
                    else
                        saltErrorLbl.setText("");
                }catch(NumberFormatException e1){
                    saltErrorLbl.setText("Invalid format");
                    hasError = true;
                }
            }
            else
                salt = 0;
            
            if(foodTitleTextField.getText().equals(""))
                title = "Food " + (panelList.size()+1);
            else
                title = foodTitleTextField.getText();
            
            if((pro + carb + fat + fibre + salt) > 100){
                addFoodLabel.setText("Total cannot be over 100");
                hasError = true;
            }
            
            Protein proteinObj = new Protein(pro*weight/100);
            Carbohydrate carbohydrateObj = new Carbohydrate(carb*weight/100);
            Fat fatObj = new Fat(fat*weight/100);
            SaturatedFat sfatObj = new SaturatedFat(sfat*weight/100);
            Salt saltObj = new Salt(salt*weight/100);
            Fibre fibreObj = new Fibre(fibre*weight/100);
            Food food;
            if(calorieGiven)
                food = new Food(title, weight, cal, proteinObj, carbohydrateObj, fatObj, sfatObj,
                    saltObj, fibreObj);
            else{
                cal = proteinObj.calcEnergy() + carbohydrateObj.calcEnergy() + fatObj.calcEnergy();
                food = new Food(title, weight, cal, proteinObj, carbohydrateObj, fatObj, sfatObj,
                    saltObj, fibreObj);
            }
                
            if(!hasError){
                FoodPanel temp = new FoodPanel(food);
                containPanel.add(temp);
                temp.setBounds(0, uppergap+=150, 300, 150);
                temp.setVisible(true);
                temp.upperGap = uppergap;
                panelList.add(temp);
                SystemClass.list.add(temp.getFood());
                addFoodLabel.setText("");
            }
        }
        else
            addFoodLabel.setText("you cannot add more than 10 items");
    }//GEN-LAST:event_addFoodBtActionPerformed

    private void dispOutputsBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispOutputsBtActionPerformed
        if(!SystemClass.list.isEmpty()){
            ResultsPanel rp = new ResultsPanel();
            rp.setVisible(true);
            this.setVisible(false);
            //rp.setLocation(170, 0);
        }
        else
            addFoodLabel.setText("Enter Value");
    }//GEN-LAST:event_dispOutputsBtActionPerformed

    private void deleteBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtActionPerformed
        deleteMarked();
    }//GEN-LAST:event_deleteBtActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFoodBt;
    private javax.swing.JLabel addFoodLabel;
    private javax.swing.JLabel backIcon;
    private javax.swing.JPanel backPanel;
    private javax.swing.JLabel bck;
    private javax.swing.JLabel caloriesErrorLbl;
    private javax.swing.JTextField caloriesTextField;
    private javax.swing.JLabel caption;
    private javax.swing.JLabel carbErrorLbl;
    private javax.swing.JTextField carboTextField;
    private javax.swing.JPanel containPanel;
    private javax.swing.JButton deleteBt;
    private javax.swing.JButton dispOutputsBt;
    private javax.swing.JLabel fatErrorLbl;
    private javax.swing.JTextField fatTextField;
    private javax.swing.JLabel fibreErrorLbl;
    private javax.swing.JTextField fibreTextField;
    private javax.swing.JTextField foodTitleTextField;
    private javax.swing.JLabel foodWeightErrorLbl;
    private javax.swing.JTextField foodWeightTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel proErrorLbl;
    private javax.swing.JTextField proteinTextField;
    private javax.swing.JLabel saltErrorLbl;
    private javax.swing.JTextField saltTextField;
    private javax.swing.JLabel satFatErrorLbl;
    private javax.swing.JTextField saturatedTextField;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JLabel topBarBGLabel;
    private javax.swing.JPanel topBarPanel;
    // End of variables declaration//GEN-END:variables
}
